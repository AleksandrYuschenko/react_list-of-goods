{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","localeCompare","length","reverse","App","state","isStarted","NONE","isReset","setState","sortByAlphabet","ALPABET","sortByLength","LENGTH","reset","this","type","onClick","className","map","el","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUF,SAASC,EACPC,EACAC,EACAC,GAGA,IAAMC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAK,EACH,OAAOI,EAAEE,cAAcD,GACzB,KAAK,EACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITN,GACFC,EAAaM,UAKRN,G,SAhCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA2CE,IAAMa,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXV,YAAY,EACZD,SAAUJ,EAASgB,KACnBC,SAAS,GALb,EAQEF,UAAY,WACV,EAAKG,UAAS,SAAAJ,GAAK,MAAK,CACtBC,WAAYD,EAAMC,eAVxB,EAcEI,eAAiB,WACf,EAAKD,SAAS,CAAEd,SAAUJ,EAASoB,WAfvC,EAkBEC,aAAe,WACb,EAAKH,SAAS,CAAEd,SAAUJ,EAASsB,UAnBvC,EAsBEV,QAAU,WACR,EAAKM,UAAS,SAAAJ,GAAK,MAAK,CACtBT,YAAaS,EAAMT,gBAxBzB,EA4BEkB,MAAQ,WACN,EAAKL,UAAS,SAAAJ,GAAK,MAAK,CACtBG,SAAUH,EAAMG,aA9BtB,4CAkCE,WACE,OACE,sCACIO,KAAKV,MAAMC,WACX,wBACEU,KAAK,SACLC,QAASF,KAAKT,UAFhB,mBAQDS,KAAKV,MAAMC,WACV,sBAAKY,UAAU,MAAf,UACE,wBACEF,KAAK,SACLC,QAASF,KAAKL,eAFhB,iCAOA,wBACEM,KAAK,SACLC,QAASF,KAAKH,aAFhB,4BAOA,wBACEI,KAAK,SACLC,QAASF,KAAKZ,QAFhB,qBAOA,wBACEa,KAAK,SACLC,QAASF,KAAKD,MAFhB,mBAOA,oBAAII,UAAU,QAAd,SACIH,KAAKV,MAAMG,QASThB,EAAgB2B,KAAI,SAAAC,GAAE,OAAI,6BAAKA,OAR9B3B,EACDD,EACAuB,KAAKV,MAAMV,SACXoB,KAAKV,MAAMT,YAEVuB,KACC,SAAAC,GAAE,OAAI,6BAAKA,mBApF/B,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.81d813c7.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 1:\n        return a.localeCompare(b);\n      case 2:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n  // Sort and reverse goods if needed\n  // ...\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  isReset: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n    isReset: false,\n  };\n\n  isStarted = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState(state => ({\n      isReset: !state.isReset,\n    }));\n  };\n\n  render(): React.ReactNode {\n    return (\n      <>\n        {!this.state.isStarted && (\n          <button\n            type=\"button\"\n            onClick={this.isStarted}\n          >\n            Start\n          </button>\n        )}\n\n        {this.state.isStarted && (\n          <div className=\"App\">\n            <button\n              type=\"button\"\n              onClick={this.sortByAlphabet}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {!this.state.isReset\n                ? (getReorderedGoods(\n                  goodsFromServer,\n                  this.state.sortType,\n                  this.state.isReversed,\n                )\n                  .map(\n                    el => <li>{el}</li>,\n                  ))\n                : goodsFromServer.map(el => <li>{el}</li>)}\n            </ul>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","setState","sortByAlphabet","ALPABET","sortByLength","LENGTH","reverse","reset","reorderList","goods","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","this","type","onClick","className","map","el","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEH,UAAY,WACV,EAAKI,UAAS,SAAAL,GAAK,MAAK,CACtBC,WAAYD,EAAMC,eATxB,EAaEK,eAAiB,WACf,EAAKD,SAAS,CAAEF,SAAUN,EAASU,WAdvC,EAiBEC,aAAe,WACb,EAAKH,SAAS,CAAEF,SAAUN,EAASY,UAlBvC,EAqBEC,QAAU,WACR,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAvBzB,EA2BES,MAAQ,WACN,EAAKN,SAAS,CACZH,YAAY,EACZC,SAAUN,EAASO,QA9BzB,4CAkCE,WACE,IAAMQ,EAtEV,SACEC,EACAV,EACAD,GAGA,IAAMY,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQd,GACN,KAAK,EACH,OAAOa,EAAEE,cAAcD,GACzB,KAAK,EACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITjB,GACFY,EAAaJ,UAKRI,EA6CeM,CAClBtB,EACAuB,KAAKrB,MAAMG,SACXkB,KAAKrB,MAAME,YAGb,OACE,sCACImB,KAAKrB,MAAMC,WACX,wBACEqB,KAAK,SACLC,QAASF,KAAKpB,UAFhB,mBAQDoB,KAAKrB,MAAMC,WACV,sBAAKuB,UAAU,MAAf,UACE,wBACEF,KAAK,SACLC,QAASF,KAAKf,eAFhB,iCAOA,wBACEgB,KAAK,SACLC,QAASF,KAAKb,aAFhB,4BAOA,wBACEc,KAAK,SACLC,QAASF,KAAKX,QAFhB,qBAOA,wBACEY,KAAK,SACLC,QAASF,KAAKV,MAFhB,mBAOA,oBAAIa,UAAU,QAAd,SACGZ,EAAYa,KACX,SAAAC,GAAE,OACA,oBACEF,UAAU,cADZ,SAIGE,GAFIA,kBAvFzB,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c4b28718.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 1:\n        return a.localeCompare(b);\n      case 2:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n  // Sort and reverse goods if needed\n  // ...\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  isStarted = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render(): React.ReactNode {\n    const reorderList = getReorderedGoods(\n      goodsFromServer,\n      this.state.sortType,\n      this.state.isReversed,\n    );\n\n    return (\n      <>\n        {!this.state.isStarted && (\n          <button\n            type=\"button\"\n            onClick={this.isStarted}\n          >\n            Start\n          </button>\n        )}\n\n        {this.state.isStarted && (\n          <div className=\"App\">\n            <button\n              type=\"button\"\n              onClick={this.sortByAlphabet}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {reorderList.map(\n                el => (\n                  <li\n                    className=\"Goods__item\"\n                    key={el}\n                  >\n                    {el}\n                  </li>\n                ),\n              )}\n            </ul>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}